final可以修饰类，方法和变量（包括成员变量和局部变量）

	1. 类（少用）
	final类中：成员变量可以根据需要设为final变量
			成员方法-》隐式地指定为final方法。
	final类不能被继承
	注：类的private方法会隐式地被指定为final方法。
	2. 修饰方法（少用）
	只有在想明确禁止该方法在子类中被覆盖的情况下才将方法设置为final的。
	3. 修饰方法参数
	可以在参数前面添加final关键字，它表示在整个方法中，我们不能改变参数的值
	也就是说传进来的数据是多少就是多少
	public class FinalTest {
	    public void finalFunc(final int i, final Value value) {
	        // i = 5; 不能改变i的值
	        // v = new Value(); 不能改变v的值
	        value.v = 5; // 可以改变引用对象的值
	    }
	}
	
	4. 修饰变量
	对于一个final变量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。但是它指向的对象的内容是可变的。
	
	
	只有在编译期间能确切知道final变量值的情况下，编译器才会进行将变量直接替换成final值的优化
	
	• static和final关键字区别：static作用于成员变量用来表示只保存一份副本，而final的作用是用来保证变量不可变。
同时使用static和final修饰的成员在内存中只占据一段不能改变的存储空间。
